*cat name.txt
    -> 파일 내용 출력
*docker build -t 이름/이미지의이름:버전 Dockerfile의 경로
    -> docker build -t juhyeon/say-my-name:1.0.0 .
*Dockerfile 
    -> 도커가 수행할 작업지시서와 같음

*FROM centos:7
    -> 'cent os 7버전'이라는 이미지를 기반으로 컨테이너를 만들겠다는 의미
*WORKDIR /app
    -> 도커의 작업 디렉토리를 /app으로 설정
*COPY name.txt .
    -> name.txt 파일을 현재 디렉토리 . (도커컨테이너 내부)로 복사해서 가져간다는 의미
*CMD cat name.txt
    -> cat name.txt 라는 명령을 컨테이너 *내부*에서 실행해달라는 의미

*docker images
    -> 생성된 이미지들 보기
*docker run 이미지의이름
    -> 작성한 이미지를 기반으로 컨테이너 실행
*docker ps
    -> 현재 돌고 있는 컨테이너들을 보여줌
    -> docker ps -a 모든 컨테이너 보여줌
*docker exec -it 컨테이너ID bash
    -> 해당하는 컨테이너에 접속

*docker run -p 80:80 nginx
    -> 호스트 피씨 포트:컨테이너 내부 포트

*docker run -v ${PWD}/data:/data/db mongo
    -> -v 호스트볼륨:컨테이너볼륨
    -> 컨테이너가 죽으면 내부에서 생성된 데이터들도 사라지므로 호스트 pc에 volume을 마운트해줌
    -> 컨테이너를 껐다가 다시 연결해도 데이터가 그대로 유지될 수 있음
    -> ${PWD} = 현재디렉토리

*docker run -p 6379:6379 redis

*Continuous Integration

*Continuous Deployment